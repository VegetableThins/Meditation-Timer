{"ast":null,"code":"var _jsxFileName = \"/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js\";\nimport React from 'react';\nimport './App.css'; // import MeditationSetup from './MeditationSetup.js'\n\nimport Countdown from 'react-countdown-now';\n\nclass MeditationTimer extends React.Component {\n  render() {\n    const Completionist = () => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Meditation Complete!\");\n\n    const renderer = ({\n      hours,\n      minutes,\n      seconds,\n      completed\n    }) => {\n      if (completed) {\n        // Render a completed state\n        return React.createElement(Completionist, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      } else {\n        // Render a countdown\n        return React.createElement(\"div\", {\n          className: \"Jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Time Remaining\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, hours, \":\", minutes, \":\", seconds));\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Countdown, {\n      className: \"jumbotron\",\n      date: Date.now() + this.props.medTime,\n      renderer: renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}\n\nexport default MeditationTimer;","map":{"version":3,"sources":["/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js"],"names":["React","Countdown","MeditationTimer","Component","render","Completionist","renderer","hours","minutes","seconds","completed","Date","now","props","medTime","handleCancel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC1CC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA5B;;AACA,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA;AAA3B,KAAD,KAA4C;AACzD,UAAIA,SAAJ,EAAe;AACX;AACA,eAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAHD,MAGO;AACH;AACA,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOH,KAAP,OAAeC,OAAf,OAAyBC,OAAzB,CAFJ,CADJ;AAMH;AACJ,KAbD;;AAcA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,IAAI,EAAEE,IAAI,CAACC,GAAL,KAAa,KAAKC,KAAL,CAAWC,OAA/D;AAAwE,MAAA,QAAQ,EAAER,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKS,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AAvByC;;AA4B9C,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import MeditationSetup from './MeditationSetup.js'\nimport Countdown from 'react-countdown-now'\n\nclass MeditationTimer extends React.Component {\n    render() {\n        const Completionist = () => <span>Meditation Complete!</span>;\n        const renderer = ({ hours, minutes, seconds, completed }) => {\n            if (completed) {\n                // Render a completed state\n                return <Completionist />;\n            } else {\n                // Render a countdown\n                return (\n                    <div className=\"Jumbotron\">\n                        <h1>Time Remaining</h1>\n                        <span>{hours}:{minutes}:{seconds}</span>\n                    </div>\n                );\n            }\n        };\n        return (\n            <div>\n                <Countdown className=\"jumbotron\" date={Date.now() + this.props.medTime} renderer={renderer} />\n                <button onClick={this.handleCancel}>Cancel</button>\n            </div>\n      )\n    }\n}\n\n\n\nexport default MeditationTimer; "]},"metadata":{},"sourceType":"module"}