{"ast":null,"code":"var _jsxFileName = \"/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js\";\nimport React from 'react';\nimport Countdown from 'react-countdown-now';\n\nclass MeditationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completed: false\n    };\n    this.preCancel = this.preCancel.bind(this);\n  }\n\n  preCancel(e) {\n    this.props.handleCancel(e);\n  }\n\n  render() {\n    const renderer = ({\n      hours,\n      minutes,\n      seconds,\n      completed\n    }) => {\n      if (completed) {\n        // Render a completed state\n        return React.createElement(\"div\", {\n          className: \"jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Meditation Completed!\"), React.createElement(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: this.preCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Finish\"));\n      } else {\n        // Render a countdown\n        return React.createElement(\"div\", {\n          className: \"jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Time Remaining\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, hours, \":\", minutes, \":\", seconds), React.createElement(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: this.preCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Cancel\"));\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Countdown, {\n      className: \"jumbotron\",\n      date: Date.now() + this.props.medTime,\n      renderer: renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MeditationTimer;","map":{"version":3,"sources":["/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js"],"names":["React","Countdown","MeditationTimer","Component","constructor","props","state","completed","preCancel","bind","e","handleCancel","render","renderer","hours","minutes","seconds","Date","now","medTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDD,EAAAA,SAAS,CAACE,CAAD,EAAG;AACR,SAAKL,KAAL,CAAWM,YAAX,CAAwBD,CAAxB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,OAAlB;AAA2BT,MAAAA;AAA3B,KAAD,KAA4C;AACzD,UAAIA,SAAJ,EAAe;AACX;AACA,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAE,KAAKC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMH,OARD,MAQO;AACH;AACA,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOM,KAAP,OAAeC,OAAf,OAAyBC,OAAzB,CAFJ,EAGI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAE,KAAKR,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;AAOH;AACJ,KAnBD;;AAoBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,IAAI,EAAES,IAAI,CAACC,GAAL,KAAa,KAAKb,KAAL,CAAWc,OAA/D;AAAwE,MAAA,QAAQ,EAAEN,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvCyC;;AA0C9C,eAAeX,eAAf","sourcesContent":["import React from 'react';\nimport Countdown from 'react-countdown-now'\n\nclass MeditationTimer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            completed: false,\n        };\n        this.preCancel = this.preCancel.bind(this);\n    }\n\n    preCancel(e){\n        this.props.handleCancel(e);\n    }\n\n    render() {\n        const renderer = ({ hours, minutes, seconds, completed }) => {\n            if (completed) {\n                // Render a completed state\n                return (\n                    <div className=\"jumbotron\">\n                        <h1>Meditation Completed!</h1>\n                        <button className=\"btn btn-secondary\" onClick={this.preCancel}>Finish</button>\n                    </div>\n                    );\n            } else {\n                // Render a countdown\n                return (\n                    <div className=\"jumbotron\">\n                        <h1>Time Remaining</h1>\n                        <span>{hours}:{minutes}:{seconds}</span>\n                        <button className=\"btn btn-secondary\" onClick={this.preCancel}>Cancel</button>\n                    </div>\n                );\n            }\n        };\n        return (\n            <div>\n                <Countdown className=\"jumbotron\" date={Date.now() + this.props.medTime} renderer={renderer} />\n            </div>\n      )\n    }\n}\n\nexport default MeditationTimer; "]},"metadata":{},"sourceType":"module"}