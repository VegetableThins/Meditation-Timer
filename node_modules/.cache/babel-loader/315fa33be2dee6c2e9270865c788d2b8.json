{"ast":null,"code":"var _jsxFileName = \"/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js\";\nimport React from 'react';\nimport './App.css'; // import MeditationSetup from './MeditationSetup.js'\n\nimport Countdown from 'react-countdown-now';\n\nclass MeditationTimer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Countdown, {\n      className: \"jumbotron\",\n      date: Date.now() + this.state.medTime,\n      renderer: renderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}\n\nconst Completionist = () => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Meditation Complete!\");\n\nconst renderer = ({\n  hours,\n  minutes,\n  seconds,\n  completed\n}) => {\n  if (completed) {\n    // Render a completed state\n    return React.createElement(Completionist, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  } else {\n    // Render a countdown\n    return React.createElement(\"div\", {\n      className: \"Jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Time Remaining\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, hours, \":\", minutes, \":\", seconds));\n  }\n};\n\nexport default MeditationTimer;","map":{"version":3,"sources":["/Users/VegetableThins/Github/Meditation-Timer/src/Components/MeditationTimer.js"],"names":["React","Countdown","MeditationTimer","Component","render","Date","now","state","medTime","renderer","handleCancel","Completionist","hours","minutes","seconds","completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC1CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa,KAAKC,KAAL,CAAWC,OAA/D;AAAwE,MAAA,QAAQ,EAAEC,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AARyC;;AAU9C,MAAMC,aAAa,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA5B;;AACA,MAAMF,QAAQ,GAAG,CAAC;AAAEG,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAA4C;AACzD,MAAIA,SAAJ,EAAe;AACX;AACA,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHD,MAGO;AACH;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,KAAP,OAAeC,OAAf,OAAyBC,OAAzB,CAFJ,CADJ;AAMH;AACJ,CAbD;;AAeA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import MeditationSetup from './MeditationSetup.js'\nimport Countdown from 'react-countdown-now'\n\nclass MeditationTimer extends React.Component {\n    render() {\n        return (\n            <div>\n                <Countdown className=\"jumbotron\" date={Date.now() + this.state.medTime} renderer={renderer} />\n                <button onClick={this.handleCancel}>Cancel</button>\n            </div>\n      )\n    }\n}\nconst Completionist = () => <span>Meditation Complete!</span>;\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return (\n            <div className=\"Jumbotron\">\n                <h1>Time Remaining</h1>\n                <span>{hours}:{minutes}:{seconds}</span>\n            </div>\n        );\n    }\n};\n\nexport default MeditationTimer; "]},"metadata":{},"sourceType":"module"}