{"ast":null,"code":"var _jsxFileName = \"/Users/VegetableThins/Github/Meditation-Timer/src/Components/App.js\";\nimport React from 'react';\nimport './App.css';\nimport MeditationSetup from './MeditationSetup.js';\nimport Countdown from 'react-countdown-now';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: \"5\",\n      medTime: 0,\n      isMeditating: false\n    };\n  }\n\n  render() {\n    const isMeditating = this.state.isMeditating;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, !this.state.isMeditating && React.createElement(MeditationSetup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), this.state.isMeditating && React.createElement(Countdown, {\n      date: Date.now() + this.state.medTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/VegetableThins/Github/Meditation-Timer/src/Components/App.js"],"names":["React","MeditationSetup","Countdown","PropTypes","App","Component","constructor","props","state","minutes","medTime","isMeditating","render","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,GADE;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMD,YAAY,GAAG,KAAKH,KAAL,CAAWG,YAAhC;AACF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,CAAC,KAAKH,KAAL,CAAWG,YAAZ,IAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/B,EAcG,KAAKH,KAAL,CAAWG,YAAX,IAA2B,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEE,IAAI,CAACC,GAAL,KAAa,KAAKN,KAAL,CAAWE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAd9B,CADF;AAkBD;;AA/B8B;;AAkCjC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport MeditationSetup from './MeditationSetup.js'\nimport Countdown from 'react-countdown-now'\nimport PropTypes from 'prop-types'\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: \"5\",\n      medTime: 0,\n      isMeditating: false,\n    };\n    \n  }\n  \n  render(){\n      const isMeditating = this.state.isMeditating;\n    return(\n      <div>\n\n        {!this.state.isMeditating && <MeditationSetup></MeditationSetup>}\n        {/* <h1>Welcome to some piece of mind</h1>\n        <p>To begin please enter the length of time you wish to meditate for:</p>\n          <select value={this.state.minutes} onChange={this.updateTime}>\n            <option value=\"5\">5 Minutes</option>\n            <option value=\"10\">10 Minutes</option>\n            <option value=\"15\">15 Minutes</option>\n            <option value=\"20\">20 Minutes</option>\n          </select>\n          <button onClick={this.startTimer}>Start</button> */}\n        {/* </form> */}\n        {/* <Timer time={this.state.medTime}></Timer> */}\n        {this.state.isMeditating && <Countdown date={Date.now() + this.state.medTime}/>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}